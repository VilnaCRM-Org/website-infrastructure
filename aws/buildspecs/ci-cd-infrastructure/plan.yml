version: 0.2

phases:
  install:
    runtime-versions:
      python: $PYTHON_VERSION
      ruby: $RUBY_VERSION
    commands:
      - "echo ## Install Terraspace"
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/credentials.sh"
      - "dnf install -y yum-utils"
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/terraform_installation.sh"
      - "dnf update -y"
  build:
    commands:
      - "cd ${CODEBUILD_SRC_DIR}"
      - "echo ## TERRASPACE Init : Initialize all providers and modules"
      - "make terraspace-all-init"
      - |
        echo "Retrieving and using GitHub token for authentication..."
        SECRET_ID=$(aws secretsmanager list-secrets --query "SecretList[?starts_with(Name, 'github-token-') && DeletedDate==null].Name" --output text)
        if [ -z "$SECRET_ID" ]; then
          echo "Error: No active GitHub token secret found."
          exit 1
        fi
        GITHUB_TOKEN=$(aws secretsmanager get-secret-value --secret-id "$SECRET_ID" --query 'SecretString' --output text | jq -r '.token')
        if [ -z "$GITHUB_TOKEN" ]; then
          echo "Error: Failed to retrieve GitHub token."
          exit 1
        fi
        echo "GitHub token retrieved successfully."
      - "echo ## TERRASPACE PLAN : Generate the Terraform Plan"
      - 'make terraspace-plan-file stack="ci-cd-infrastructure" out="ci-cd-infrastructure.plan"'
      - 'make terraspace-plan-file stack="ci-cd-iam" out="ci-cd-iam.plan"'
      - 'make terraspace-plan-file stack="website-iam" out="website-iam.plan"'
      - 'make terraspace-plan-file stack="iam-groups" out="iam-groups.plan"'

artifacts:
  files:
    - "**/*"

cache:
  paths:
    - "/bin"
    - "/usr/local/bin"
    - "/root/.terraform"
    - "/root/.cache"
    - "/root/.gem"
    - "/usr/local/bundle"
