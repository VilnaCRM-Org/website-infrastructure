version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: $NODEJS_VERSION
      python: $PYTHON_VERSION
    commands:
      - 'apt update -y'
      - 'apt install -y ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils'
      - '. ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/website_installation.sh'
      - 'cd /codebuild-user/website'
      - 'echo #### Owner Change'
      - '. ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/codebuild_user_owner_change.sh'

  build:
    run-as: 'codebuild-user'
    commands:
      - 'mkdir /codebuild-user/website/memory-leak-logs'
      - 'echo #### Set up environment'
      - '. ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/create_env.sh'
      - 'echo #### Running Memory Leak Test' # No Reports folder
      - 'export MEMORY_LEAK_RUN=true && pnpm run test:memory-leak 2>&1 | tee memory-leak-logs/memory-leak.log'
    finally:
      - 'python3 ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/py/reports.py'
      - 'aws lambda invoke --function-name "ci-cd-website-$ENVIRONMENT-reports-notification" --cli-binary-format raw-in-base64-out --payload file://payload.json output.txt'

artifacts:
  files:
    - '/codebuild-user/website/memory-leak-logs/**/*'

cache:
  paths:
    - '/bin'
    - '/usr/local/bin'
    - '/root/.cache'
    - '/codebuild-user/website/node_modules'
    - '/usr/local/bundle'
