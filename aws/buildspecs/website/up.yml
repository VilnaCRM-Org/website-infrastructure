version: 0.2

phases:
  install:
    runtime-versions:
      python: $PYTHON_VERSION
      ruby: $RUBY_VERSION
    commands:
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/credentials.sh"
      - "dnf install -y yum-utils"
      - "pip install python-dotenv"
      - ". ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/terraform_installation.sh"
  build:
    commands:
      - "cd ${CODEBUILD_SRC_DIR}"
      - "echo ## TERRASPACE UP : Bringing up the infrastructure"
      - 'make terraspace-up-plan stack="website" plan="website.plan"'
      - 'make terraspace-output-file stack="website" out=".terraform.env"'
      - "cd terraform"
      - "python3 ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/py/distribution_deploy.py"
      - "echo Cloning website repository..."
      - "git clone --branch 133-cloudfront-routing $WEBSITE_GIT_REPOSITORY_LINK"
      - "ls -R website"
      - "echo Copying CloudFront routing script from cloned repo..."
      - "cp website/scripts/cloudfront_routing.js > cloudfront_routing.js"
      - "echo Updating CloudFront function..."
      - |
        aws cloudfront update-function --name routing-function \
          --function-config 'Comment=Routing logic for CloudFront,Runtime=cloudfront-js-1.0' \
          --if-match $(aws cloudfront describe-function --name routing-function --query 'ETag' --output text) \
          --function-code fileb://cloudfront_routing.js
        if [ $? -ne 0 ]; then
          echo "Error updating CloudFront function"
          exit 1
        fi
      - "echo Cleaning up..."
      - "rm -rf website"
      - "echo Publishing the updated function..."
      - |
        aws cloudfront publish-function --name routing-function \
          --if-match $(aws cloudfront describe-function --name routing-function --query 'ETag' --output text)
        if [ $? -ne 0 ]; then
          echo "Error publishing CloudFront function"
          exit 1
        fi
      - "echo Function published successfully"
      - "aws codepipeline start-pipeline-execution --name $CI_CD_WEBSITE_PIPELINE_NAME || { echo 'Error starting CodePipeline'; exit 1; }"

artifacts:
  files:
    - "**/*"
cache:
  paths:
    - "/bin"
    - "/usr/local/bin"
    - "/root/.terraform"
    - "/root/.cache"
    - "/root/.gem"
    - "/usr/local/bundle"
