version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: $NODEJS_VERSION
      python: $PYTHON_VERSION

    commands:
      - 'echo #### Install Software'
      - 'n install 21.7.1'
      - 'cd ~'
      - 'git clone -b $WEBSITE_GIT_REPOSITORY_BRANCH "$WEBSITE_GIT_REPOSITORY_LINK.git"'
      - 'cd website/'
      - 'echo #### Install pnpm'
      - 'npm install -g pnpm'
      - 'echo #### Install dependencies'
      - 'pnpm i --frozen-lockfile'
      - 'pnpm exec playwright install'
      - 'pnpm exec playwright install-deps'
      - 'echo #### Set up environment'
      - '. ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/sh/createEnv.sh'

  build:
    commands:
      - 'mkdir ~/reports'
      - 'echo #### Running E2E Test' # Reports folder: playwright-report/
      - 'export PW_E2E_RUN=true && PLAYWRIGHT_HTML_REPORT=playwright-e2e-reports pnpm exec playwright test src/test/e2e'
      - 'echo #### Running Visual Test' # Reports folder: playwright-report/
      - 'export PW_VISUAL_RUN=true && PLAYWRIGHT_HTML_REPORT=playwright-visual-reports pnpm exec playwright test src/test/visual'
      - 'echo #### Running Memory Leak Test' # No Reports folder
      - 'pnpm run test:memory-leak'

    finally:
      - 'python3 ${CODEBUILD_SRC_DIR}/${SCRIPT_DIR}/py/reports.py'
      - 'aws lambda invoke --function-name "ci-cd-website-$ENVIRONMENT-reports-notification" --cli-binary-format raw-in-base64-out --payload file://payload.json output.txt'

cache:
  paths:
    - '/bin'
    - '/usr/local/bin'
    - '/root/.cache'
    - '/usr/local/bundle'
